import 'package:app_ios/models/block_list_model.dart';import 'package:collection/collection.dart';import 'package:flutter/cupertino.dart';import 'package:get/get.dart';import 'package:isar/isar.dart';import 'package:path_provider/path_provider.dart';class BlockFactory extends GetxController{  static BlockFactory get to => Get.find();  late Isar listHandle;  var blockList=<BlockItem>[].obs;  @override  Future<void> onInit() async {    // TODO: implement onInit    super.onInit();    final dir = await getApplicationDocumentsDirectory();    listHandle = await Isar.open(      [BlockItemSchema],      name: 'blockitems',      directory: dir.path,    );    //获取本地保存的黑名单    blockList.value=await listHandle.blockItems.filter().createDateTimeIsNotNull().findAll(); //排序在显示时候处理    update();  }  Future<bool> blockContact(String contactId)async{    debugPrint("BLOCK ${contactId}");    var item=BlockItem(contactId: contactId);    await listHandle.writeTxn(            ()async{          await listHandle.blockItems.put(item);        }    );    blockList.value=[item,...blockList];    update();    return true;  }  bool allowToReceive(String sendId){    var index=blockList.indexWhere((e) =>e.contactId?.trimRight()==sendId );    return index<0;  }}